version: '3'
name: 12-docker-compose

services:
  
  nginx-users:
    image: registry-alumnos.labsis.frc.utn.edu.ar:8443/nginx-users-85505-85829-92425:latest
    build: nginx/
    container_name: ${NGINX_CONTAINER_NAME}
    ports:
      - "8080:80"
    networks:
      - ${CRUD_USERS_NET}
    restart: always
    links:
      - ${API_CRUD_CONTAINER_NAME}:${API_CRUD_CONTAINER_NAME}

  api-crud-users:
    image: registry-alumnos.labsis.frc.utn.edu.ar:8443/api-crud-users-85505-85829-92425:latest
    build: api/
    container_name: ${API_CRUD_CONTAINER_NAME}
    networks:
      - ${CRUD_USERS_NET}
    depends_on: 
      - ${DB_CRUD_CONTAINER_NAME}
    environment:
      - MYSQL_DATABASE_USER=${MYSQL_USER}
      - MYSQL_DATABASE_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE_DB=${MYSQL_DATABASE}
      - MYSQL_DATABASE_HOST=${DB_CRUD_CONTAINER_NAME}
    links:
      - "${DB_CRUD_CONTAINER_NAME}:${DB_CRUD_CONTAINER_NAME}"

  api-node:
    image: registry-alumnos.labsis.frc.utn.edu.ar:8443/api-node-85505-85829-92425:latest
    build: api-node/
    container_name: ${API_NODE_CONTAINER_NAME}
    networks:
      - ${CRUD_USERS_NET}

  db-crud-users:
    image: registry-alumnos.labsis.frc.utn.edu.ar:8443/db-crud-users-85505-85829-92425:latest
    build: db/
    container_name: ${DB_CRUD_CONTAINER_NAME}
    restart: always
    networks:
      - ${CRUD_USERS_NET}
    volumes:
      - data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  react-front:
    image: registry-alumnos.labsis.frc.utn.edu.ar:8443/react-front-85505-85829-92425:latest
    build: web/
    container_name: ${REACT_FRONT_CONTAINER_NAME}
    networks:
      - ${FRONT_NET}
    ports:
      - "3000:80"

volumes:
  data:

networks:
  crud-users-net:
  front-net:
